@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Services.Configuration
@using Nop.Services.Media
@inject IWorkContext workContext
@inject ISettingService settingService
@inject IPictureService pictureService
@inject IThemeContext themeContext
<div class="footer" >

    <div class="custom-container-fluid container-fluid">
        @await Component.InvokeAsync("Widget", new { widgetZone = "viridi_before_footer_nav" })

        <div class="footer-block information mb-3" >
            <div class="title" id="headingOne" >
                <strong>@T("Footer.Information")</strong>
            </div>

                <ul class="list">
                    @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                    @if (Model.DisplayContactUsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                    }
                    @if (Model.DisplayCustomerInfoFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                    }
                </ul>

        </div>

        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
        @{
            var footerEmail = await settingService.GetSettingByKeyAsync<string>("ViridiSettings.FooterEmail");
        }
    </div>
    <div class="footer-lower">
        <div class="custom-container-fluid container-fluid">
            <div class="row">
                    <div class="footer-info text-center pb-2">
                        <span class="footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span>
                        @if (Model.DisplayTaxShippingInfoFooter)
                        {
                            var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                            <span class="footer-tax-shipping">
                                @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = await Html.GetTopicSeNameAsync("shippinginfo") }))
                            </span>
                        }
                    </div>
                @if (!Model.HidePoweredByNopCommerce)
                {
                    <span>&nbsp;&nbsp;&nbsp;</span>
                        <div class="footer-powered-by text-center pb-2">
                            @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                                Please find more info at https://www.nopcommerce.com/copyrightremoval.aspx*@
                            <span class="poweredby">Powered by</span> <a class="link" href="https://www.nopcommerce.com/">nopCommerce</a>
                        </div>
                }
                @if (!string.IsNullOrWhiteSpace(footerEmail))
                {
                        <a class="d-block text-white text-center" href="mailto:@(footerEmail)"><i class="fa fa-envelope" aria-hidden="true"></i> @footerEmail</a>
                }
            </div>
        </div>
        <a href="#" class="scrollup border-0"> <i class="fa fa-angle-double-up" aria-hidden="true"></i> </a>
    </div>
</div>

<nop-antiforgery-token />