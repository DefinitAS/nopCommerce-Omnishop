@model CheckoutCompletedModel
@using Nop.Services.Configuration
@using Nop.Services.Media
@inject ISettingService settingService
@inject IPictureService pictureService
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-checkout-page");
    NopHtml.AppendPageCssClassParts("html-order-completed-page");
}
@section Breadcrumb
    {
    <div class="breadcrumb">
        <div class="page-title">
            <h1>@T("Checkout.ThankYou")</h1>
        </div>
    </div>
}
<div class="page checkout-page order-completed-page">

    @{
        var showPictureOnOrderCompletedPage = await settingService.GetSettingByKeyAsync<bool>("ViridiSettings.ShowPictureOnOrderCompletedPage");
        if (showPictureOnOrderCompletedPage)
        {
            var pictureId = await settingService.GetSettingByKeyAsync<int>("ViridiSettings.OrderCompletedPagePictureId");
            var pictureUrl = await pictureService.GetPictureUrlAsync(pictureId, 320);
            <p class="text-center">
                <img src="@pictureUrl" />
            </p>
        }
    }

    <div class="container text-center">
        @if (!Model.OnePageCheckoutEnabled)
        {
            @await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Complete })
        }

        <div class="page-body checkout-data">
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedTop, additionalData = Model })
            <div class="section order-completed">
                <div class="title">
                    <strong>@T("Checkout.YourOrderHasBeenSuccessfullyProcessed")</strong>
                </div>
                <div class="details">
                    <div class="order-number">
                        <strong>@T("Checkout.OrderNumber"): @Model.CustomOrderNumber</strong>
                    </div>
                    <div class="details-link">
                        <a href="@Url.RouteUrl("OrderDetails", new { orderID = Model.OrderId })">@T("Checkout.PlacedOrderDetails")</a>
                    </div>
                </div>
                <div class="buttons mt-3">
                    <input type="button" value="@T("Checkout.ThankYou.Continue")" class=" btn button-2" onclick="setLocation('@Url.RouteUrl("Homepage")')" />
                </div>
            </div>
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedBottom, additionalData = Model })
        </div>
    </div>
</div>
